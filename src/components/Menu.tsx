import React, { memo, useState, useCallback, useRef, useEffect } from 'react'
import styled from 'styled-components'

const Wrap = styled.div({
  position: 'relative',
  width: '100%',
  height: 0,
})

type MenuListProps = {
  readonly moveY?: number
}
const MenuList = styled.div<MenuListProps>((props: MenuListProps) => ({
  position: 'absolute',
  left: 0,
  bottom: 0,
  right: 0,
  transition: `${props.moveY ? 0: 3e2}ms all`,
  transform: `translate3d(0,${props.moveY}px,0)`,
}))

const PullingRope = styled.svg.attrs({
  viewBox: "0 0 81 346",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
})({
  position: 'absolute',
  top: '100%',
  right: 20,
  width: 30,
  pointerEvents: 'none',
  path: {
    pointerEvents: 'all'
  }
})

const PullingRopePath = styled.path.attrs({
  fill: '#002C5B',
  d: `
  M39.0870748,240.814966 L27.0272109,228.755102 C26.352381,228.080272 26.352381,226.970068 27.0272109,226.295238 L39.0870748,214.235374 C39.7619048,213.560544 40.8721088,213.560544 41.5469388,214.235374 L53.6068027,226.295238 C54.2816327,226.970068 54.2816327,228.080272 53.6068027,228.755102 L41.5469388,240.814966 C40.8503401,241.489796 39.7619048,241.489796 39.0870748,240.814966 L39.0870748,240.814966 Z
  M70.9782313,217.870748 C68.7578231,217.870748 66.6027211,218.632653 64.9047619,220.02585 C64.447619,220.395918 64.0122449,220.831293 63.6204082,221.288435 L60.5510204,224.357823 L53.585034,217.391837 L59.0054422,211.971429 C62.662585,208.314286 62.662585,202.371429 59.0054422,198.714286 C57.2421769,196.95102 54.8911565,195.971429 52.3877551,195.971429 C49.8843537,195.971429 47.5333333,196.95102 45.770068,198.714286 L40.3061224,204.156463 L34.8857143,198.736054 C33.122449,196.972789 30.7714286,195.993197 28.2680272,195.993197 C25.7646259,195.993197 23.4136054,196.972789 21.6503401,198.736054 C17.9931973,202.393197 17.9931973,208.336054 21.6503401,211.993197 L27.0489796,217.391837 L20.0612245,224.357823 L16.7306122,221.027211 C16.5129252,220.809524 16.2952381,220.570068 16.077551,220.37415 C14.3142857,218.785034 12.0285714,217.914286 9.65578231,217.914286 C4.34421769,217.914286 0.0340136054,222.22449 0.0340136054,227.536054 C0.0340136054,232.847619 4.34421769,237.157823 9.65578231,237.157823 C11.8108844,237.157823 13.8353741,236.461224 15.5333333,235.155102 C16.1210884,234.697959 16.6653061,234.17551 17.122449,233.587755 L20.0612245,230.64898 L27.0272109,237.614966 L21.6285714,243.013605 C19.8653061,244.776871 18.8857143,247.127891 18.8857143,249.631293 C18.8857143,252.134694 19.8653061,254.485714 21.6285714,256.270748 C23.3918367,258.034014 25.7428571,259.013605 28.2462585,259.013605 C30.7496599,259.013605 33.1006803,258.034014 34.8639456,256.270748 L40.2843537,250.85034 L45.7047619,256.270748 C47.4680272,258.034014 49.8190476,259.013605 52.322449,259.013605 C54.8258503,259.013605 57.1768707,258.034014 58.9401361,256.270748 C62.5972789,252.613605 62.5972789,246.670748 58.9401361,243.013605 L53.5197279,237.593197 L60.4857143,230.627211 L63.8163265,233.957823 L63.8816327,234.023129 L64.3823129,234.52381 C64.4258503,234.567347 64.4693878,234.610884 64.5129252,234.632653 C66.2761905,236.221769 68.5619048,237.092517 70.9346939,237.092517 C76.2462585,237.092517 80.5567895,232.782313 80.5567895,227.470748 C80.6,222.180952 76.2897959,217.870748 70.9782313,217.870748 Z M40.3061224,230.64898 L47.2721088,237.614966 L40.3061224,244.602721 L33.3401361,237.636735 L40.3061224,230.64898 Z M40.3061224,224.379592 L33.3401361,217.413605 L40.3061224,210.447619 L47.2721088,217.413605 L40.3061224,224.379592 Z M48.8394558,201.870748 C49.7755102,200.934694 50.9945578,200.434014 52.322449,200.434014 C53.6503401,200.434014 54.8911565,200.934694 55.8054422,201.870748 C57.7210884,203.786395 57.7210884,206.921088 55.8054422,208.836735 L50.385034,214.257143 L43.4190476,207.291156 L48.8394558,201.870748 Z M24.7632653,208.858503 C22.847619,206.942857 22.847619,203.808163 24.7632653,201.892517 C25.6993197,200.956463 26.9183673,200.455782 28.2462585,200.455782 C29.5741497,200.455782 30.814966,200.956463 31.7292517,201.892517 L37.1496599,207.312925 L30.1836735,214.278912 L24.7632653,208.858503 L24.7632653,208.858503 Z M4.45306122,227.557823 C4.45306122,224.706122 6.78231293,222.376871 9.63401361,222.376871 C10.8965986,222.376871 12.1156463,222.834014 13.0517007,223.661224 L16.9265306,227.536054 L12.7034014,231.759184 C11.8108844,232.412245 10.7442177,232.760544 9.63401361,232.760544 C6.78231293,232.738776 4.45306122,230.409524 4.45306122,227.557823 Z M23.1959184,227.514286 L30.1836735,220.548299 L37.1496599,227.514286 L30.1619048,234.502041 L23.1959184,227.514286 Z M31.7510204,253.157823 C30.814966,254.093878 29.5741497,254.594558 28.2680272,254.594558 C26.9401361,254.594558 25.6993197,254.093878 24.785034,253.157823 C23.8489796,252.221769 23.3482993,251.002721 23.3482993,249.67483 C23.3482993,248.346939 23.8489796,247.106122 24.785034,246.191837 L30.1836735,240.793197 L37.1496599,247.759184 L31.7510204,253.157823 L31.7510204,253.157823 Z M55.8272109,246.191837 C57.7428571,248.107483 57.7428571,251.242177 55.8272109,253.157823 C54.8911565,254.093878 53.6721088,254.594558 52.3442177,254.594558 C51.0163265,254.594558 49.7755102,254.093878 48.8612245,253.157823 L43.4408163,247.737415 L50.4068027,240.74966 L55.8272109,246.191837 L55.8272109,246.191837 Z M43.4408163,227.514286 L50.4068027,220.548299 L57.3727891,227.514286 L50.4068027,234.480272 L43.4408163,227.514286 Z M70.9782313,232.695238 C69.6938776,232.695238 68.4748299,232.216327 67.5170068,231.367347 L67.1034014,230.953741 L67.0380952,230.888435 L63.6639456,227.514286 L66.7986395,224.379592 L67.7782313,223.4 C68.692517,222.681633 69.8027211,222.289796 70.9782313,222.289796 C73.829932,222.289796 76.1591837,224.619048 76.1591837,227.470748 C76.1591837,230.365986 73.829932,232.695238 70.9782313,232.695238 L70.9782313,232.695238 Z
  M40,200 C41.6470588,200 43,192.686804 43,183.783784 L43,16.2162162 C43,7.31319555 41.6470588,0 40,0 C38.3529412,0 37,7.31319555 37,16.2162162 L37,183.783784 C37,192.686804 38.3529412,200 40,200 L40,200 Z
  M42.4829932,259.644898 L42.4829932,256.92381 C42.4829932,255.704762 41.4816327,254.703401 40.262585,254.703401 C39.0435374,254.703401 38.0421769,255.704762 38.0421769,256.92381 L38.0421769,259.644898 C38.0421769,260.863946 39.0435374,261.865306 40.262585,261.865306 C41.4816327,261.865306 42.4829932,260.863946 42.4829932,259.644898 Z M34.3632653,265.544218 C34.3632653,266.763265 35.3646259,267.764626 36.5836735,267.764626 L43.9414966,267.764626 C45.1605442,267.764626 46.1619048,266.763265 46.1619048,265.544218 C46.1619048,264.32517 45.1605442,263.32381 43.9414966,263.32381 L36.5836735,263.32381 C35.3428571,263.345578 34.3632653,264.32517 34.3632653,265.544218 Z M45.8571429,268.134694 L34.6462585,268.134694 C33.4272109,268.134694 32.4258503,269.136054 32.4258503,270.355102 C32.4258503,271.57415 33.4272109,272.57551 34.6462585,272.57551 L45.8789116,272.57551 C47.0979592,272.57551 48.0993197,271.57415 48.0993197,270.355102 C48.0993197,269.136054 47.0979592,268.134694 45.8571429,268.134694 L45.8571429,268.134694 Z M34.9510204,273.685714 C33.7319728,273.685714 32.7306122,274.687075 32.7306122,275.906122 L32.7306122,343.47619 C32.7306122,344.695238 33.7319728,345.696599 34.9510204,345.696599 C36.170068,345.696599 37.1714286,344.695238 37.1714286,343.47619 L37.1714286,275.906122 C37.1714286,274.687075 36.170068,273.685714 34.9510204,273.685714 L34.9510204,273.685714 Z M40.3714286,273.685714 C39.152381,273.685714 38.1510204,274.687075 38.1510204,275.906122 L38.1510204,343.47619 C38.1510204,344.695238 39.152381,345.696599 40.3714286,345.696599 C41.5904762,345.696599 42.5918367,344.695238 42.5918367,343.47619 L42.5918367,275.906122 C42.5918367,274.687075 41.6122449,273.685714 40.3714286,273.685714 L40.3714286,273.685714 Z M45.552381,273.685714 C44.3333333,273.685714 43.3319728,274.687075 43.3319728,275.906122 L43.3319728,343.47619 C43.3319728,344.695238 44.3333333,345.696599 45.552381,345.696599 C46.7714286,345.696599 47.7727891,344.695238 47.7727891,343.47619 L47.7727891,275.906122 C47.7727891,274.687075 46.7931973,273.685714 45.552381,273.685714 L45.552381,273.685714 Z
  `
})({
  cursor: 'grabbing',
})

const Menu = () => {
  const [moveY, setMoveY] = useState(0)
  const startYRef = useRef(0)
  console.log(startYRef)

  const onStartPull = (event: React.TouchEvent | React.MouseEvent) => {
    console.log(232, event.type)
    if (event.type === 'touchstart') {
      event = event as React.TouchEvent
      startYRef.current = event.touches[0].screenY
      window.addEventListener('touchmove', onPulling, false)
      window.addEventListener('touchend', onPullEnd, false)
    } else {
      event = event as React.MouseEvent
      startYRef.current = event.clientY
      window.addEventListener('mousemove', onPulling, false)
      window.addEventListener('mouseup', onPullEnd, false)
    }
  }

  const onPulling = useCallback((event) => {
    setMoveY((event instanceof MouseEvent ? event.clientY : event.touches[0].screenY) - startYRef.current)
  }, [])


  const removeEvents = () => {
    window.removeEventListener('touchmove', onPulling)
    window.removeEventListener('touchup', onPullEnd)
    window.removeEventListener('mousemove', onPulling)
    window.removeEventListener('mouseup', onPullEnd)
  }

  const onPullEnd = useCallback(() => {
    setMoveY(0)
    removeEvents()
  }, [])

  useEffect(() => {
    return removeEvents
  }, [])

  console.log(323, moveY)

  return (
    <Wrap>
      <MenuList moveY={moveY}>
        <div>123</div>
        <div>123</div>
        <div>123</div>
        
        <PullingRope>
          <PullingRopePath onMouseDown={onStartPull} onTouchStart={onStartPull} />
        </PullingRope>
      </MenuList>
    </Wrap>
  )
}

export default memo(Menu)
